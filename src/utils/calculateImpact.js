// Sistema de c√°lculo de impacto na vida do Shih Tzu

export const calculateLifeImpact = (answers) => {
  const baseLifeExpectancy = 15; // anos base para Shih Tzu
  let totalImpact = 0;
  let criticalErrors = [];
  let commonMistakes = [];
  let correctAnswers = 0;
  
  answers.forEach((answer) => {
    totalImpact += answer.impact;
    
    if (answer.impact === 0) {
      correctAnswers++;
    } else if (answer.impact <= -3) {
      criticalErrors.push({
        question: answer.questionId,
        mistake: answer.text,
        consequence: answer.consequence,
        yearsLost: Math.abs(answer.impact)
      });
    } else if (answer.impact < 0) {
      commonMistakes.push({
        question: answer.questionId,
        mistake: answer.text,
        consequence: answer.consequence,
        yearsLost: Math.abs(answer.impact)
      });
    }
  });
  
  // Calcular expectativa de vida final
  const projectedLifespan = Math.max(2, Math.min(18, baseLifeExpectancy + totalImpact));
  const yearsLost = Math.max(0, baseLifeExpectancy - projectedLifespan);
  
  // Calcular porcentagem de conhecimento
  const percentageKnowledge = Math.max(0, Math.round((correctAnswers / answers.length) * 100));
  
  // Determinar gravidade da situa√ß√£o
  const severity = getSeverityLevel(totalImpact, criticalErrors.length);
  
  // Calcular estat√≠sticas adicionais
  const avgTimePerQuestion = answers.reduce((sum, answer) => sum + (answer.timeSpent || 0), 0) / answers.length;
  const hasUrgentErrors = criticalErrors.length > 0;
  
  return {
    // Resultados principais
    projectedLifespan: Number(projectedLifespan.toFixed(1)),
    yearsLost: Number(yearsLost.toFixed(1)),
    percentageKnowledge,
    totalImpact,
    
    // Categoriza√ß√£o de erros
    criticalErrors,
    commonMistakes,
    correctAnswers,
    
    // An√°lise comportamental
    severity,
    avgTimePerQuestion: Math.round(avgTimePerQuestion),
    hasUrgentErrors,
    
    // Perfil do tutor
    profile: getTutorProfile(percentageKnowledge, criticalErrors.length, totalImpact),
    
    // Recomenda√ß√µes personalizadas
    recommendations: getRecommendations(criticalErrors, commonMistakes, percentageKnowledge),
    
    // Urg√™ncia emocional
    urgencyMessage: getUrgencyMessage(yearsLost, criticalErrors.length, percentageKnowledge)
  };
};

const getSeverityLevel = (totalImpact, criticalErrorsCount) => {
  if (totalImpact >= -1 && criticalErrorsCount === 0) {
    return {
      level: 'Excelente',
      emoji: 'üèÜ',
      color: '#059669',
      description: 'Voc√™ √© um tutor exemplar!'
    };
  } else if (totalImpact >= -3 && criticalErrorsCount <= 1) {
    return {
      level: 'Bom',
      emoji: 'üëç',
      color: '#65A30D',
      description: 'No caminho certo, mas pode melhorar'
    };
  } else if (totalImpact >= -6 && criticalErrorsCount <= 2) {
    return {
      level: 'Preocupante',
      emoji: '‚ö†Ô∏è',
      color: '#D97706',
      description: 'Alguns erros graves que precisam de aten√ß√£o'
    };
  } else if (totalImpact >= -10 && criticalErrorsCount <= 3) {
    return {
      level: 'Cr√≠tico',
      emoji: 'üö®',
      color: '#DC2626',
      description: 'Erros que podem encurtar significativamente a vida'
    };
  } else {
    return {
      level: 'Emergencial',
      emoji: 'üíÄ',
      color: '#7F1D1D',
      description: 'Situa√ß√£o de risco extremo - a√ß√£o imediata necess√°ria'
    };
  }
};

const getTutorProfile = (knowledge, criticalErrors, totalImpact) => {
  if (knowledge >= 80 && criticalErrors === 0) {
    return {
      type: 'Expert Consciente',
      description: 'Voc√™ demonstra conhecimento avan√ßado e toma decis√µes corretas',
      strengths: ['Conhecimento t√©cnico', 'Decis√µes informadas', 'Preven√ß√£o'],
      needsImprovement: ['Manter-se atualizado', 'Compartilhar conhecimento']
    };
  } else if (knowledge >= 60 && criticalErrors <= 1) {
    return {
      type: 'Tutor Dedicado',
      description: 'Voc√™ se importa muito, mas ainda tem pontos cegos importantes',
      strengths: ['Amor pelo pet', 'Disposi√ß√£o para aprender'],
      needsImprovement: ['Conhecimento t√©cnico', 'Identifica√ß√£o de riscos']
    };
  } else if (knowledge >= 40 && criticalErrors <= 2) {
    return {
      type: 'Iniciante Cuidadoso',
      description: 'Voc√™ quer fazer o melhor, mas precisa de orienta√ß√£o',
      strengths: ['Inten√ß√£o de cuidar bem', 'Reconhece limita√ß√µes'],
      needsImprovement: ['Educa√ß√£o b√°sica', 'Preven√ß√£o de erros graves']
    };
  } else if (knowledge >= 20) {
    return {
      type: 'Tutor em Risco',
      description: 'V√°rias pr√°ticas perigosas que colocam seu pet em risco',
      strengths: ['Ainda h√° tempo para mudar'],
      needsImprovement: ['Educa√ß√£o urgente', 'Mudan√ßa de h√°bitos', 'Acompanhamento veterin√°rio']
    };
  } else {
    return {
      type: 'Situa√ß√£o Cr√≠tica',
      description: 'Conhecimento insuficiente est√° colocando seu pet em perigo real',
      strengths: ['Fez o teste - primeiro passo'],
      needsImprovement: ['Educa√ß√£o imediata', 'Supervis√£o profissional', 'Mudan√ßa radical de pr√°ticas']
    };
  }
};

const getRecommendations = (criticalErrors, commonMistakes, knowledge) => {
  const recommendations = [];
  
  // Recomenda√ß√µes baseadas em erros cr√≠ticos
  if (criticalErrors.length > 0) {
    recommendations.push({
      priority: 'URGENTE',
      title: 'Corrigir Erros Fatais Imediatamente',
      description: `Voc√™ cometeu ${criticalErrors.length} erro(s) que podem ser fatais. Estas pr√°ticas devem ser interrompidas hoje mesmo.`,
      actions: criticalErrors.map(error => `‚Ä¢ Parar: ${error.mistake}`)
    });
  }
  
  // Recomenda√ß√µes baseadas em erros comuns
  if (commonMistakes.length > 0) {
    recommendations.push({
      priority: 'IMPORTANTE',
      title: 'Corrigir Pr√°ticas Prejudiciais',
      description: `${commonMistakes.length} pr√°ticas est√£o reduzindo a qualidade de vida do seu pet.`,
      actions: commonMistakes.slice(0, 3).map(error => `‚Ä¢ Revisar: ${error.mistake}`)
    });
  }
  
  // Recomenda√ß√µes baseadas no n√≠vel de conhecimento
  if (knowledge < 30) {
    recommendations.push({
      priority: 'CR√çTICO',
      title: 'Educa√ß√£o Imediata Necess√°ria',
      description: 'Seu n√≠vel de conhecimento atual representa risco para seu pet.',
      actions: [
        '‚Ä¢ Buscar orienta√ß√£o veterin√°ria urgente',
        '‚Ä¢ Estudar cuidados b√°sicos com Shih Tzu',
        '‚Ä¢ Considerar curso de primeiros socorros pet'
      ]
    });
  } else if (knowledge < 60) {
    recommendations.push({
      priority: 'MODERADO',
      title: 'Expandir Conhecimento',
      description: 'Base boa, mas ainda h√° lacunas importantes.',
      actions: [
        '‚Ä¢ Aprofundar conhecimento sobre nutri√ß√£o',
        '‚Ä¢ Aprender sobre sinais de alerta de sa√∫de',
        '‚Ä¢ Estabelecer rotina preventiva'
      ]
    });
  }
  
  return recommendations;
};

const getUrgencyMessage = (yearsLost, criticalErrors, knowledge) => {
  if (yearsLost >= 8) {
    return {
      title: 'EMERG√äNCIA: Seu pet pode perder mais da metade da vida!',
      message: `Com suas pr√°ticas atuais, voc√™ pode estar roubando ${yearsLost} anos preciosos do seu companheiro.`,
      emotion: 'CHOQUE',
      color: '#7F1D1D'
    };
  } else if (yearsLost >= 5) {
    return {
      title: 'ALERTA VERMELHO: Anos preciosos sendo perdidos',
      message: `${yearsLost} anos √© tempo demais para perder por erros evit√°veis.`,
      emotion: 'URG√äNCIA',
      color: '#DC2626'
    };
  } else if (yearsLost >= 2) {
    return {
      title: 'ATEN√á√ÉO: Tempo valioso em risco',
      message: `Mesmo ${yearsLost} anos representam tempo precioso que voc√™s poderiam ter juntos.`,
      emotion: 'PREOCUPA√á√ÉO',
      color: '#D97706'
    };
  } else if (yearsLost > 0) {
    return {
      title: 'Pequenos ajustes, grandes ganhos',
      message: `Algumas corre√ß√µes podem garantir que voc√™s aproveitem cada momento juntos.`,
      emotion: 'OTIMISMO',
      color: '#65A30D'
    };
  } else {
    return {
      title: 'Parab√©ns! Voc√™ est√° no caminho certo!',
      message: 'Continue assim e seu pet ter√° uma vida longa e feliz ao seu lado.',
      emotion: 'CELEBRA√á√ÉO',
      color: '#059669'
    };
  }
};

// Fun√ß√µes auxiliares para an√°lise estat√≠stica
export const getAverageImpact = (answers) => {
  return answers.reduce((sum, answer) => sum + answer.impact, 0) / answers.length;
};

export const getMostDangerousChoice = (answers) => {
  return answers.reduce((worst, current) => 
    current.impact < worst.impact ? current : worst
  );
};

export const getTimeAnalysis = (answers) => {
  const times = answers.map(a => a.timeSpent || 0);
  return {
    fastest: Math.min(...times),
    slowest: Math.max(...times),
    average: times.reduce((sum, time) => sum + time, 0) / times.length
  };
};